% Copyright (C) Xiangyi Meng.

function quad = GaussQuadratureRule_line(np, type)

quad.type = type;
quad.np = np;               

% type 101 : Gauss Legendre quadrature rule
% type 102 : Gauss Lobatto quadrature rule
switch type
    case 101
        switch np
            case 1
                quad.points = 0;

                quad.weights = 2;
            case 2
                quad.points = [-0.5773502691896257645091488; ...
                                0.5773502691896257645091488];

                quad.weights = [1; 1];
            case 3
                quad.points = [-0.7745966692414833770358531; ...
                                0; ...
                                0.7745966692414833770358531];

                quad.weights = [0.5555555555555555555555556; ...
                                0.8888888888888888888888889; ...
                                0.5555555555555555555555556];
            case 4
                quad.points = [-0.8611363115940525752239465; ...
                               -0.3399810435848562648026658; ...
                                0.3399810435848562648026658; ...
                                0.8611363115940525752239465]; 

                quad.weights = [0.3478548451374538573730639; ...
                                0.6521451548625461426269361; ...
                                0.6521451548625461426269361; ...
                                0.3478548451374538573730639];
            case 5
                quad.points = [-0.9061798459386639927976269; ...
                               -0.5384693101056830910363144; ...
                                0; ...
                                0.5384693101056830910363144; ...
                                0.9061798459386639927976269];

                quad.weights = [0.2369268850561890875142640; ...
                                0.4786286704993664680412915; ...
                                0.5688888888888888888888889; ...
                                0.4786286704993664680412915; ...
                                0.2369268850561890875142640];
            case 6
                quad.points = [-0.9324695142031520278123016; ...
                               -0.6612093864662645136613996; ...
                               -0.2386191860831969086305017; ...
                                0.2386191860831969086305017; ...
                                0.6612093864662645136613996; ...
                                0.9324695142031520278123016];

                quad.weights = [0.1713244923791703450402961; ...
                                0.3607615730481386075698335; ...
                                0.4679139345726910473898703; ...
                                0.4679139345726910473898703; ...
                                0.3607615730481386075698335; ...
                                0.1713244923791703450402961];
            case 7
                quad.points = [-0.9491079123427580; ...
                               -0.7415311855993940; ...
                               -0.4058451513773970; ...
                                0; ...
                                0.4058451513773970; ...
                                0.7415311855993940; ...
                                0.9491079123427580];

                quad.weights = [0.1294849661688690; ...
                                0.2797053914892760; ...
                                0.3818300505051180; ...
                                0.4179591836734690; ...
                                0.3818300505051180; ...
                                0.2797053914892760; ...
                                0.1294849661688690];
            case 8
                quad.points = [-0.9602898564975360; ...
                               -0.7966664774136260; ...
                               -0.5255324099163290; ...
                               -0.1834346424956490; ...
                                0.1834346424956490; ...
                                0.5255324099163290; ...
                                0.7966664774136260; ...
                                0.9602898564975360];

                quad.weights = [0.1012285362903760; ...
                                0.2223810344533740; ...
                                0.3137066458778870; ...
                                0.3626837833783620; ...
                                0.3626837833783620; ...
                                0.3137066458778870; ...
                                0.2223810344533740; ...
                                0.1012285362903760];
            case 9
                quad.points = [-0.9681602395076260; ...
                               -0.8360311073266350; ...
                               -0.6133714327005900; ...
                               -0.3242534234038080; ...
                                0; ...
                                0.3242534234038080; ...
                                0.6133714327005900; ...
                                0.8360311073266350; ...
                                0.9681602395076260];

                quad.weights = [0.0812743883615744; ...
                                0.1806481606948570; ...
                                0.2606106964029350; ...
                                0.3123470770400020; ...
                                0.3302393550012590; ...
                                0.3123470770400020; ...
                                0.2606106964029350; ...
                                0.1806481606948570; ...
                                0.0812743883615744];
            case 10
                quad.points = [-0.9739065285171710; ...
                               -0.8650633666889840; ...
                               -0.6794095682990240; ...
                               -0.4333953941292470; ...
                               -0.1488743389816310; ...
                                0.1488743389816310; ...
                                0.4333953941292470; ...
                                0.6794095682990240; ...
                                0.8650633666889840; ...
                                0.9739065285171710];

                quad.weights = [0.0666713443086881; ...
                                0.1494513491505800; ...
                                0.2190863625159820; ...
                                0.2692667193099960; ...
                                0.2955242247147520; ...
                                0.2955242247147520; ...
                                0.2692667193099960; ...
                                0.2190863625159820; ...
                                0.1494513491505800;  ...
                                0.0666713443086881];       
            otherwise
                error('Not implemented number of Gauss points')
        end        
    case 102
        switch np  
            case 2    
                quad.points = [-1; 1]; 

                quad.weights = [1; 1];   
            case 3      
                quad.points = [-1; 0; 1];
 
                quad.weights = [1 / 3; 4 / 3; 1 / 3];      
            case 4    
                quad.points = [-1; -sqrt(1 / 5); sqrt(1 / 5); 1];

                quad.weights = [1 / 6; 5 / 6; 5 / 6; 1 / 6];        
            case 5      
                quad.points = [-1; -sqrt(3 / 7); 0; sqrt(3 / 7); 1];

                quad.weights = [1 / 10; 49 / 90; 32 / 45; 49 / 90; 1 / 10];        
            case 6        
                quad.points = [-1; ...
                               -sqrt(1 / 3 + 2 * sqrt(7) / 21); ...
                               -sqrt(1 / 3 - 2 * sqrt(7) / 21); ...
                                sqrt(1 / 3 - 2 * sqrt(7) / 21); ...
                                sqrt(1 / 3 + 2 * sqrt(7) / 21); ... 
                                1];

                quad.weights = [1 / 15; ... 
                                (14 - sqrt(7)) / 30; ...
                                (14 + sqrt(7)) / 30; ... 
                                (14 + sqrt(7)) / 30; ...
                                (14 - sqrt(7)) / 30; ...
                                1 / 15];        
            case 7
                quad.points = [-1; ...
                               -sqrt(5 / 11 + 2 / 11 * sqrt(5 / 3)); ...
                               -sqrt(5 / 11 - 2 / 11 * sqrt(5 / 3)); ... 
                                0; ... 
                                sqrt(5 / 11 - 2 / 11 * sqrt(5 / 3)); ...
                                sqrt(5 / 11 + 2 / 11 * sqrt(5 / 3)); ... 
                                1];

                quad.weights = [1 / 21; ... 
                                (124 - 7 * sqrt(15)) / 350; ... 
                                (124 + 7 * sqrt(15)) / 350; ...  
                                256 / 525; ... 
                                (124 + 7 * sqrt(15)) / 350; ...  
                                (124 - 7 * sqrt(15)) / 350; ... 
                                1 / 21];        
            otherwise
                error('Not implemented number of Gauss points')
        end        
    otherwise
        error('Not implemented type of Gauss quadrature rule')
end

end