% *
% *----------------------------------------------------------------------*
% *                                                                      *
% C     Exact Riemann Solver for the Time-Dependent                      *
% C     One Dimensional Euler Equations                                  *
% *                                                                      *
% C     Name of program: HE-E1RPEX                                       *
% *                                                                      *
% C     Purpose: to solve the Riemann problem exactly,                   *
% C              for the time dependent one dimensional                  *
% C              Euler equations for an ideal gas                        *
% *                                                                      *
% C     Input  file: e1rpex.ini                                          *
% C     Output file: e1rpex.out (exact solution)                         *
% *                                                                      *
% C     Programer: E. F. Toro                                            *
% *                                                                      *
% C     Last revision: 31st May 1999                                     *
% *                                                                      *
% C     Theory is found in Ref. 1, Chapt. 4 and in original              *
% C     references therein                                               *
% *                                                                      *
% C     1. Toro, E. F., "Riemann Solvers and Numerical                   *
% C                      Methods for Fluid Dynamics"                     *
% C                      Springer-Verlag, 1997                           *
% C                      Second Edition, 1999                            *
% *                                                                      *
% C     This program is part of                                          *
% *                                                                      *
% C     NUMERICA                                                         *
% C     A Library of Source Codes for Teaching,                          *
% C     Research and Applications,                                       *
% C     by E. F. Toro                                                    *
% C     Published by NUMERITEK LTD, 1999                                 *
% C     Website: www.numeritek.com                                       *
% *                                                                      *
% *----------------------------------------------------------------------*


function [XS,DS,US,PS,ES] = E1RPEX(DOMLEN, DIAPH1, CELLS, GAMMA, TIMEOU, DL, UL, PL, DR, UR, PR, PSCALE)

%% C     Declaration of variables:


% C     Input variables
% *
% C     DOMLEN   : Domain length
% C     DIAPH1   : Position of diaphragm 1
% C     CELLS    : Number of computing cells
% C     GAMMA    : Ratio of specific heats
% C     TIMEOU   : Output time
% C     DL       : Initial density  on left state
% C     UL       : Initial velocity on left state
% C     PL       : Initial pressure on left state
% C     DR       : Initial density  on right state
% C     UR       : Initial velocity on right state
% C     PR       : Initial pressure on right state
% C     PSCALE   : Normalising constant

% C     Compute gamma related constants

      G1 = (GAMMA - 1.0)/(2.0*GAMMA);
      G2 = (GAMMA + 1.0)/(2.0*GAMMA);
      G3 = 2.0*GAMMA/(GAMMA - 1.0);
      G4 = 2.0/(GAMMA - 1.0);
      G5 = 2.0/(GAMMA + 1.0);
      G6 = (GAMMA - 1.0)/(GAMMA + 1.0);
      G7 = (GAMMA - 1.0)/2.0;
      G8 = GAMMA - 1.0;

% C     Compute sound speeds

      CL = sqrt(GAMMA*PL/DL);
      CR = sqrt(GAMMA*PR/DR);

% C     The pressure positivity condition is tested for

      if (G4*(CL+CR) <= (UR-UL)) 

% C        The initial data is such that vacuum is generated, then program stopped.

         disp('***Vacuum is generated by data***')
         disp('***Program stopped***')

      end


% C     Exact solution for pressure and velocity in star
% C     region is found

      [PM, UM] = STARPU(DL, UL, PL, CL, DR, UR, PR, CR, PSCALE,GAMMA);

      DX = DOMLEN/CELLS;

% C     Complete solution at time TIMEOU is found

%       fileID = fopen('elrpex.txt','w');

      XS = zeros(1,CELLS);
      DS = zeros(1,CELLS);
      US = zeros(1,CELLS);
      PS = zeros(1,CELLS);

      for I = 1:CELLS

         XPOS = (I - 0.5)*DX;
         S    = (XPOS - DIAPH1)/TIMEOU;
         XS(I) = XPOS;

% C        Solution at point (X,T) = ( XPOS - DIAPH1,TIMEOU) is found

         [DS(I),US(I),PS(I)] =  SAMPLE(PM, UM, S,GAMMA,DL, UL, PL, CL, DR, UR, PR, CR);

% C        Exact solution profiles are written to e1rpex.out.

%          fprintf(fileID,'%14.6f %14.6f %14.6f %14.6f %14.6f\n',XPOS, DS, US, PS/PSCALE, PS/DS/G8/PSCALE);
      end
      PS = PS./PSCALE;
      ES = PS./DS/G8/PSCALE;

%       fclose(fileID);

      return